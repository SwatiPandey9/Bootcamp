import React, {Component} from 'react';
import {
  Text,
  View,
  SafeAreaView,
  TextInput,
  StyleSheet,
  Dimensions,
} from 'react-native';
import { TouchableOpacity } from 'react-native-gesture-handler';
import { connect } from 'react-redux';

const {height, width} = Dimensions.get('window');

class DetailScreen extends Component {
  state = {
    object: this.props.route.params.item,
    title: this.props.route.params.item.title,
    body: this.props.route.params.item.body,
    id: this.props.route.params.item.id,
  };

  changeObjectTitle = text => {
    this.state.object.title = text;
    this.setState({...object});
  };

  changeTitle = text => {
    
    this.setState({title: text});
  };

  changeBody = text => {
    this.setState({body: text});
  };

 updateObjectData = () =>{
     this.state.object.title = this.state.title
     this.state.object.body = this.state.body
     console.log(this.state.object)
     this.props.updateObject(this.state)
     this.props.saveData()
    //  this.props.saveData(this.state.title, this.state.body, this.state.id)
     console.log('.........')

 }

  render() {
    
    const title = this.state.object.title;
    return (
      <View>
        {/* <Text>{item.title}</Text> */}
        <Text style={styles.headingText}>Make Your Edits</Text>
        {/* <Text> {this.state.title} </Text> */}
        <Text>Change Title Below</Text>
        <TextInput
          placeholder="Edit title"
        //   value={this.state.object.title}
        value = {this.state.title}
          onChangeText={text => {
            this.changeTitle(text);
          }}
          style={styles.titleText}
          multiline={true}
        />
        <Text>Change Body Text</Text>

        <TextInput
          placeholder="Edit Body"
        //   value={this.state.object.body}
        value={this.state.body}
          onChangeText={text => {
            this.changeBody(text);
          }}
          style={styles.bodyText}
          multiline={true}
        />

        <Text style={{backgroundColor:'lightgreen'}}>{JSON.stringify(this.state.object)}</Text>
        <Text style={{backgroundColor:"yellow"}}>{this.state.object.title}</Text>
        <Text>{this.state.title}</Text>
        <TouchableOpacity onPress={this.updateObjectData}>
            <Text>
            Save Data
            </Text>
            </TouchableOpacity>

      </View>
    );
  }
}
const styles = StyleSheet.create({
  headingText: {
    backgroundColor: '#0B3861',
    color: '#fff',
    textAlign: 'center',
    fontSize: height / 20,
    padding: 10,
    width: width * 0.8,
    alignSelf: 'center',
    // borderRadius:20
  },
  titleText: {
    backgroundColor: '#fff',
    padding: 10,
    width: width * 0.75,
    marginBottom: height / 50,
    color: '#0B3861',
    alignSelf: 'center',
    fontSize: height / 50,
    height: height * 0.1,
    width: width * 0.9,
    borderRadius: height / 30,
  },
  bodyText: {
    backgroundColor: '#fff',
    color: '#525252',
    alignSelf: 'center',
    padding: height / 60,
    fontSize: height / 50,
    height: height * 0.2,
    width: width * 0.9,
    borderRadius: height / 30,

    // height:height
  },
});

const mapStateToProps = state => {
    return {data: state.productDetail.apiData};
  };
  
  const mapDispatchToProps = dispatch => {
    return {
      updateObject: data => dispatch({type: 'UPLOAD_OBJECT', payload: data}),
      saveData: () => dispatch({type: 'SAVE'}),
    //   saveData: (title, body, id) => dispatch({type:'SAVE', payload{title, body, id}})
    };
  };
  
  export default connect(mapStateToProps, mapDispatchToProps)(DetailScreen);
  

// export default DetailScreen;
